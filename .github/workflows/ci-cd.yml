name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: spicy-fairytales/package-lock.json

    - name: Install dependencies
      run: |
        cd spicy-fairytales
        npm ci

    - name: Install Chrome for testing
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Run type checking
      run: |
        cd spicy-fairytales
        npm run build

    - name: Run unit tests
      run: |
        cd spicy-fairytales
        npm test -- --watch=false --browsers=ChromeHeadless

    - name: Run validation scripts
      run: |
        cd spicy-fairytales
        npm run lint

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: spicy-fairytales/package-lock.json

    - name: Install dependencies
      run: |
        cd spicy-fairytales
        npm ci

    - name: Build for production
      run: |
        cd spicy-fairytales
        npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v5
      with:
        name: dist
        path: spicy-fairytales/dist/
        retention-days: 30

  deploy-preview:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v5
      with:
        name: dist
        path: dist/

    - name: Deploy to Netlify (Preview)
      uses: netlify/actions/cli@master
      with:
        args: deploy --dir=dist/spicy-fairytales --alias=${{ github.head_ref }}
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}